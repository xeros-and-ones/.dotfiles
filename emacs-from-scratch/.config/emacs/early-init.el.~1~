;;; early-init.el --- Early Init File -*- lexical-binding: t; no-byte-compile: t -*-
;; NOTE: early-init.el is now generated from readme.org.  Please edit that file instead

;; Defer garbage collection further back in the startup process
(setq gc-cons-threshold most-positive-fixnum
      gc-cons-percentage 0.6)

;; In Emacs 27+, package initialization occurs before `user-init-file' is
;; loaded, but after `early-init-file'. Doom handles package initialization, so
;; we must prevent Emacs from doing it early!
(setq package-enable-at-startup nil)
;; Do not allow loading from the package cache (same reason).
(setq package-quickstart nil)

;; Prevent the glimpse of un-styled Emacs by disabling these UI elements early.
(push '(menu-bar-lines . 0) default-frame-alist)
(push '(tool-bar-lines . 0) default-frame-alist)
(push '(vertical-scroll-bars) default-frame-alist)

;; Resizing the Emacs frame can be a terribly expensive part of changing the
;; font. By inhibiting this, we easily halve startup times with fonts that are
;; larger than the system default.
(setopt
 frame-inhibit-implied-resize t  ; inhibit frame resize at startup
 inhibit-compacting-font-caches t)

(setq-default
 ring-bell-function 'ignore                    ; prevent beep sound.
 inhibit-startup-screen t                      ; TODO: maybe better on early-init or performance?
 initial-major-mode 'fundamental-mode          ; TODO: maybe better on early-init or performance?
 initial-scratch-message nil                   ; TODO: maybe better on early-init?
 )
;; Disable GUI elements
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(setq inhibit-splash-screen t)
(setq use-file-dialog nil)

;; Prevent unwanted runtime builds in gccemacs (native-comp); packages are
;; compiled ahead-of-time when they are installed and site files are compiled
;; when gccemacs is installed.
(setq comp-deferred-compilation nil)

(unless (daemonp)
  (defvar default-file-name-handler-alist file-name-handler-alist)
  (setopt file-name-handler-alist nil)

  (add-hook 'emacs-startup-hook
	      (lambda ()
	      (setopt file-name-handler-alist default-file-name-handler-alist)) 100))

(defmacro xero/measure-time (&rest body)
  "Measure the time it takes to evaluate BODY."
  `(let ((time (current-time)))
     ,@body
     (message "%s" (float-time (time-since time)))))

(defun xero/time-since-startup (&optional prefix)
  "Display the time that past since emacs startup. Add PREFIX if given at the
start of message for debug purposes."
  (interactive)
  (let* ((prefix (or prefix ""))
	 (time (float-time (time-since before-init-time)))
	 (str (format "%s%s seconds" prefix time)))
    (if (or (not (string-empty-p prefix))
	    (called-interactively-p 'interactive))
	(message str)
      str)))

(defvar xero/time-last-check nil)
(defvar xero/time-threshold 0)
(setq xero/time-threshold 0.02)

(defun xero/time-since-last-check (&optional prefix)
  "Display the time that past since last check. Add PREFIX if given at the
start of message for debug purposes."
  (interactive)
  (let* ((prefix (or prefix ""))
	 (time (float-time (time-since (or xero/time-last-check before-init-time))))
	 (str (format "%s%s seconds" prefix time)))
    (setq xero/time-last-check (current-time))
    (if (or (not (string-empty-p prefix))
	    (called-interactively-p 'interactive))
	(when (> time xero/time-threshold) (message "%s" str))
      str))


  ;;; early-init.el ends here

(defconst xero/default-font-family "CaskaydiaCove Nerd Font")
(defconst xero/default-font-size 100)
(defconst xero/default-icon-size 15)

(defconst xero/variable-pitch-font-family "Rubik")

(custom-set-faces
 `(default ((t (:family ,xero/default-font-family :height ,xero/default-font-size :weight 'semibold))))
 `(variable-pitch ((t (:family ,xero/variable-pitch-font-family :height 1.0))))
 ;; Characters with fixed pitch face do not shown when height is 90.
 `(fixed-pitch-serif ((t (:height 1.2)))))
